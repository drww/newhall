package newhall.ui;

import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import newhall.sim.NewhallDataset;

public class DefaultNewhallFrame extends javax.swing.JFrame {

    private NewhallDataset nd;
    private boolean inMetric = true;

    public DefaultNewhallFrame() {
        initComponents();
        this.setTitle("Newhall");
        System.out.println("datasetJTable is null: " + (datasetTable == null));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    datasetPanel = new javax.swing.JPanel();
    datasetScrollPane = new javax.swing.JScrollPane();
    datasetTable = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    stationText = new javax.swing.JLabel();
    elevationText = new javax.swing.JLabel();
    annualRainfallText = new javax.swing.JLabel();
    temperatureRegimeText = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    moistureRegimeText = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    waterholdingCapacityText = new javax.swing.JLabel();
    modelResultsPanel = new javax.swing.JPanel();
    jMenuBar1 = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    openDatasetMenuItem = new javax.swing.JMenuItem();
    exitMenuItem = new javax.swing.JMenuItem();
    optionsMenu = new javax.swing.JMenu();
    toggleUnitsMenuItem = new javax.swing.JMenuItem();
    helpMenu = new javax.swing.JMenu();
    aboutMenuItem = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    datasetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dataset"));

    datasetTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Rainfall", null, null, null, null, null, null, null, null, null, null, null, null},
        {"Air Temp", null, null, null, null, null, null, null, null, null, null, null, null}
      },
      new String [] {
        " ", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false, false, false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    datasetTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    datasetScrollPane.setViewportView(datasetTable);

    jLabel1.setText("Station:");

    jLabel2.setText("Elevation:");

    jLabel3.setText("Annual Rainfall:");

    jLabel4.setText("Temperature Regime:");

    stationText.setText(" << No Dataset Loaded >>");

    elevationText.setText(" ");

    annualRainfallText.setText(" ");

    temperatureRegimeText.setText(" ");

    jLabel9.setText("Latitude:");

    jLabel10.setText(" ");

    jLabel11.setText("Longitude:");

    jLabel12.setText(" ");

    jLabel13.setText("Moisture Regime:");

    moistureRegimeText.setText(" ");

    jLabel15.setText("Waterholding Capacity:");

    waterholdingCapacityText.setText(" ");

    javax.swing.GroupLayout datasetPanelLayout = new javax.swing.GroupLayout(datasetPanel);
    datasetPanel.setLayout(datasetPanelLayout);
    datasetPanelLayout.setHorizontalGroup(
      datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(datasetPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(datasetScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
          .addGroup(datasetPanelLayout.createSequentialGroup()
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(datasetPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stationText, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(datasetPanelLayout.createSequentialGroup()
                .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                  .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datasetPanelLayout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(annualRainfallText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datasetPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(elevationText, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addGroup(datasetPanelLayout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(temperatureRegimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGroup(datasetPanelLayout.createSequentialGroup()
                    .addComponent(jLabel13)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(moistureRegimeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(datasetPanelLayout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
              .addGroup(datasetPanelLayout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(waterholdingCapacityText, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)))))
        .addContainerGap())
    );
    datasetPanelLayout.setVerticalGroup(
      datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(datasetPanelLayout.createSequentialGroup()
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(stationText)
          .addComponent(jLabel9)
          .addComponent(jLabel12)
          .addComponent(jLabel10)
          .addComponent(jLabel11))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(elevationText)
          .addComponent(jLabel4)
          .addComponent(temperatureRegimeText))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(annualRainfallText)
          .addComponent(jLabel13)
          .addComponent(moistureRegimeText)
          .addComponent(jLabel15)
          .addComponent(waterholdingCapacityText))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(datasetScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    modelResultsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Results"));

    javax.swing.GroupLayout modelResultsPanelLayout = new javax.swing.GroupLayout(modelResultsPanel);
    modelResultsPanel.setLayout(modelResultsPanelLayout);
    modelResultsPanelLayout.setHorizontalGroup(
      modelResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 705, Short.MAX_VALUE)
    );
    modelResultsPanelLayout.setVerticalGroup(
      modelResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 140, Short.MAX_VALUE)
    );

    fileMenu.setText("File");

    openDatasetMenuItem.setText("Open Dataset...");
    openDatasetMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        openDatasetMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(openDatasetMenuItem);

    exitMenuItem.setText("Exit");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(exitMenuItem);

    jMenuBar1.add(fileMenu);

    optionsMenu.setText("Options");

    toggleUnitsMenuItem.setText("Toggle English/Metric Units");
    toggleUnitsMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        toggleUnitsMenuItemActionPerformed(evt);
      }
    });
    optionsMenu.add(toggleUnitsMenuItem);

    jMenuBar1.add(optionsMenu);

    helpMenu.setText("Help");

    aboutMenuItem.setText("About");
    helpMenu.add(aboutMenuItem);

    jMenuBar1.add(helpMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(modelResultsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(datasetPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(datasetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(modelResultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
      System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openDatasetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDatasetMenuItemActionPerformed
      JFileChooser jfc = new JFileChooser(".");
      int returnCondition = jfc.showOpenDialog(this);
      if(returnCondition == JFileChooser.APPROVE_OPTION) {
        System.out.println("Opening: " + jfc.getSelectedFile().getAbsolutePath());
        try {
          nd = new NewhallDataset(jfc.getSelectedFile().getAbsolutePath());
          loadDataset();
          runModel();
        } catch(Exception e) {
          System.out.println("File format was unacceptable.");
          nd = null;
        }
      }
      System.out.println("NewhallDataset loaded: " + (nd != null));
    }//GEN-LAST:event_openDatasetMenuItemActionPerformed

    private void toggleUnitsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleUnitsMenuItemActionPerformed
      this.inMetric = !this.inMetric;
      loadDataset();
      runModel();
      System.out.println("inMetric: " + this.inMetric);
    }//GEN-LAST:event_toggleUnitsMenuItemActionPerformed

    public void loadDataset() {
      ArrayList<Double> properTemp = new ArrayList<Double>(12);
      ArrayList<Double> properPrecip = new ArrayList<Double>(12);

      if(this.inMetric && !nd.isMetric()) {
        // Convert English to metric.
      } else if(!this.inMetric && nd.isMetric()) {
        // Convert metric to English.
      } else {
        // Present format is correct.
      }

      TableModel uiTable = this.datasetTable.getModel();

      for (int i = 0; i < 12; i++) {
        uiTable.setValueAt(nd.getPrecipitation().get(i), 0, i + 1);
        uiTable.setValueAt(nd.getTemperature().get(i), 1, i + 1);
      }

    }

    public void runModel() {
      
    }

    /**
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DefaultNewhallFrame().setVisible(true);
            }
        });
    }
    **/

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem aboutMenuItem;
  private javax.swing.JLabel annualRainfallText;
  private javax.swing.JPanel datasetPanel;
  private javax.swing.JScrollPane datasetScrollPane;
  private javax.swing.JTable datasetTable;
  private javax.swing.JLabel elevationText;
  private javax.swing.JMenuItem exitMenuItem;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JMenu helpMenu;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JPanel modelResultsPanel;
  private javax.swing.JLabel moistureRegimeText;
  private javax.swing.JMenuItem openDatasetMenuItem;
  private javax.swing.JMenu optionsMenu;
  private javax.swing.JLabel stationText;
  private javax.swing.JLabel temperatureRegimeText;
  private javax.swing.JMenuItem toggleUnitsMenuItem;
  private javax.swing.JLabel waterholdingCapacityText;
  // End of variables declaration//GEN-END:variables

}
