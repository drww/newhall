package newhall.ui;

import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import newhall.sim.BASICSimulationModel;
import newhall.sim.NewhallDataset;
import newhall.sim.NewhallResults;

public class DefaultNewhallFrame extends javax.swing.JFrame {

  private NewhallDataset nd;
  private NewhallResults nr;
  private boolean inMetric = true;

  public DefaultNewhallFrame() {
    initComponents();
    this.setTitle("Newhall");
    System.out.println("datasetJTable is null: " + (datasetTable == null));
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jSeparator1 = new javax.swing.JSeparator();
    datasetPanel = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    stationText = new javax.swing.JLabel();
    elevationText = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    latitudeText = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    longitudeText = new javax.swing.JLabel();
    datasetScrollPane = new javax.swing.JScrollPane();
    datasetTable = new javax.swing.JTable();
    modelResultsPanel = new javax.swing.JPanel();
    jMenuBar1 = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    openDatasetMenuItem = new javax.swing.JMenuItem();
    exitMenuItem = new javax.swing.JMenuItem();
    optionsMenu = new javax.swing.JMenu();
    toggleUnitsMenuItem = new javax.swing.JMenuItem();
    helpMenu = new javax.swing.JMenu();
    aboutMenuItem = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    datasetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dataset"));

    jLabel1.setText("Station:");

    jLabel2.setText("Elevation:");

    stationText.setText(" << No Dataset Loaded >>");

    elevationText.setText(" ");

    jLabel9.setText("Latitude:");

    latitudeText.setText(" ");

    jLabel11.setText("Longitude:");

    longitudeText.setText(" ");

    datasetTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"", null, null, null, null, null, null, null, null, null, null, null, null},
        {"", null, null, null, null, null, null, null, null, null, null, null, null}
      },
      new String [] {
        " ", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false, false, false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    datasetTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    datasetScrollPane.setViewportView(datasetTable);

    javax.swing.GroupLayout datasetPanelLayout = new javax.swing.GroupLayout(datasetPanel);
    datasetPanel.setLayout(datasetPanelLayout);
    datasetPanelLayout.setHorizontalGroup(
      datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datasetPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(datasetScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
          .addGroup(datasetPanelLayout.createSequentialGroup()
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addComponent(jLabel1))
            .addGap(18, 18, 18)
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(stationText, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(elevationText, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel9)
              .addComponent(jLabel11))
            .addGap(18, 18, 18)
            .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(longitudeText, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
              .addComponent(latitudeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))))
        .addContainerGap())
    );
    datasetPanelLayout.setVerticalGroup(
      datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(datasetPanelLayout.createSequentialGroup()
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(stationText)
          .addComponent(jLabel9)
          .addComponent(latitudeText))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(longitudeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(datasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(elevationText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(datasetScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        .addContainerGap())
    );

    modelResultsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Model Results"));

    javax.swing.GroupLayout modelResultsPanelLayout = new javax.swing.GroupLayout(modelResultsPanel);
    modelResultsPanel.setLayout(modelResultsPanelLayout);
    modelResultsPanelLayout.setHorizontalGroup(
      modelResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 663, Short.MAX_VALUE)
    );
    modelResultsPanelLayout.setVerticalGroup(
      modelResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 153, Short.MAX_VALUE)
    );

    fileMenu.setText("File");

    openDatasetMenuItem.setText("Open Dataset...");
    openDatasetMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        openDatasetMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(openDatasetMenuItem);

    exitMenuItem.setText("Exit");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(exitMenuItem);

    jMenuBar1.add(fileMenu);

    optionsMenu.setText("Options");

    toggleUnitsMenuItem.setText("Toggle English/Metric Units");
    toggleUnitsMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        toggleUnitsMenuItemActionPerformed(evt);
      }
    });
    optionsMenu.add(toggleUnitsMenuItem);

    jMenuBar1.add(optionsMenu);

    helpMenu.setText("Help");

    aboutMenuItem.setText("About");
    helpMenu.add(aboutMenuItem);

    jMenuBar1.add(helpMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(modelResultsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(datasetPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(datasetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(modelResultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
      System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openDatasetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDatasetMenuItemActionPerformed
      JFileChooser jfc = new JFileChooser(".");
      int returnCondition = jfc.showOpenDialog(this);
      if (returnCondition == JFileChooser.APPROVE_OPTION) {
        System.out.println("Opening: " + jfc.getSelectedFile().getAbsolutePath());
        try {
          nd = new NewhallDataset(jfc.getSelectedFile().getAbsolutePath());
        } catch (Exception e) {
          System.out.println("File format was unacceptable: " + e);
        }
        loadDataset();
      }
      System.out.println("NewhallDataset loaded: " + (nd != null));
    }//GEN-LAST:event_openDatasetMenuItemActionPerformed

    private void toggleUnitsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleUnitsMenuItemActionPerformed
      this.inMetric = !this.inMetric;
      loadDataset();
      //runModel();
      System.out.println("inMetric: " + this.inMetric);
    }//GEN-LAST:event_toggleUnitsMenuItemActionPerformed

  public void loadDataset() {

    // Refresh the frame with the dataset's fields.

    ArrayList<Double> properTemp = new ArrayList<Double>(12);
    ArrayList<Double> properPrecip = new ArrayList<Double>(12);
    double properElevation = 0.0;

    if (this.inMetric && !nd.isMetric()) {
      // Convert English to metric.
      for (int i = 0; i < 12; i++) {
        double tempInC = (nd.getTemperature().get(i) - 32) * (5.0 / 9.0);
        properTemp.add(tempInC);
        double precipInMm = nd.getPrecipitation().get(i) * 25.4;
        properPrecip.add(precipInMm);
        properElevation = nd.getElevation() * 0.3048;
      }
    } else if (!this.inMetric && nd.isMetric()) {
      // Convert metric to English.
      for (int i = 0; i < 12; i++) {
        double tempInF = (nd.getTemperature().get(i) * (9.0 / 5.0)) + 32;
        properTemp.add(tempInF);
        double precipInInches = nd.getPrecipitation().get(i) / 25.4;
        properPrecip.add(precipInInches);
        properElevation = nd.getElevation() * 3.2808399;
      }
    } else {
      // Present format is correct.
      properTemp = nd.getTemperature();
      properPrecip = nd.getPrecipitation();
      properElevation = nd.getElevation();
    }

    TableModel uiTable = this.datasetTable.getModel();
    if (this.inMetric) {
      uiTable.setValueAt("Rainfall (mm)", 0, 0);
      uiTable.setValueAt("Air Temp (C)", 1, 0);
      elevationText.setText(roundForDisplay(properElevation) + " meters");
    } else {
      uiTable.setValueAt("Rainfall (in)", 0, 0);
      uiTable.setValueAt("Air Temp (F)", 1, 0);
      elevationText.setText(roundForDisplay(properElevation) + " feet");
    }

    datasetTable.getColumnModel().getColumn(0).setPreferredWidth(150);
    for (int i = 0; i < 12; i++) {
      uiTable.setValueAt(roundForDisplay(properPrecip.get(i)), 0, i + 1);
      uiTable.setValueAt(roundForDisplay(properTemp.get(i)), 1, i + 1);
    }

    stationText.setText(nd.getName());
    latitudeText.setText(roundDegreesForDisplay(nd.getLatitude()) + " degrees " + nd.getNsHemisphere());
    longitudeText.setText(roundDegreesForDisplay(nd.getLongitude()) + " degrees " + nd.getEwHemisphere());

  }

  public double roundForDisplay(Double value) {
    return Double.valueOf(new DecimalFormat("##.##").format(value));
  }

  public double roundDegreesForDisplay(Double degrees) {
    return Double.valueOf(new DecimalFormat("##.####").format(degrees));
  }

  public void runModel() {
    try {
      nr = BASICSimulationModel.runSimulation(nd);
      System.out.println(nr);
    } catch (Exception e) {
      System.out.println("Could not run simulation.");
      e.printStackTrace();
    }
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem aboutMenuItem;
  private javax.swing.JPanel datasetPanel;
  private javax.swing.JScrollPane datasetScrollPane;
  private javax.swing.JTable datasetTable;
  private javax.swing.JLabel elevationText;
  private javax.swing.JMenuItem exitMenuItem;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JMenu helpMenu;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JLabel latitudeText;
  private javax.swing.JLabel longitudeText;
  private javax.swing.JPanel modelResultsPanel;
  private javax.swing.JMenuItem openDatasetMenuItem;
  private javax.swing.JMenu optionsMenu;
  private javax.swing.JLabel stationText;
  private javax.swing.JMenuItem toggleUnitsMenuItem;
  // End of variables declaration//GEN-END:variables
}
